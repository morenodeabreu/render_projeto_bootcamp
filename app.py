import pandas as pd
import scipy.stats
import streamlit as st
import time
import plotly.express as px

# Configura√ß√£o da p√°gina e cabe√ßalho
st.set_page_config(page_title="Vehicle Data Analysis Dashboard", page_icon="üöó", layout="wide")

# Cabe√ßalho da aplica√ß√£o
st.title("üöó Vehicle Data Analysis Dashboard")
st.markdown("---")
st.markdown("""
**An√°lise Interativa de Dados de Ve√≠culos**

Esta aplica√ß√£o fornece ferramentas de visualiza√ß√£o interativa para analisar dados de vendas de ve√≠culos. 
Explore a rela√ß√£o entre quilometragem e pre√ßos atrav√©s de histogramas e gr√°ficos de dispers√£o.

**Funcionalidades:**
- Cria√ß√£o interativa de histogramas para dados de od√¥metro
- Visualiza√ß√£o de gr√°fico de dispers√£o: od√¥metro vs pre√ßo
- Interface amig√°vel com bot√µes e caixas de sele√ß√£o

*Autor: Roberto Moreno | Data: 2025-09-27*
""")
st.markdown("---")

car_data = pd.read_csv('vehicles.csv') # lendo os dados
hist_button = st.button('Criar histograma') # criar um bot√£o

if hist_button: # se o bot√£o for clicado
    # escrever uma mensagem
    st.write('Criando um histograma para o conjunto de dados de an√∫ncios de vendas de carros')
    
    # criar um histograma
    fig = px.histogram(car_data, x="odometer")

    # exibir um gr√°fico Plotly interativo
    st.plotly_chart(fig, use_container_width=True)

# criar uma caixa de sele√ß√£o
build_histogram = st.checkbox('Criar um histograma')

if build_histogram: # se a caixa de sele√ß√£o for selecionada
    st.write('Criando um histograma para a coluna odometer')
    
    fig = px.scatter(car_data, x="odometer", y="price") # criar um gr√°fico de dispers√£o
    st.plotly_chart(fig, use_container_width=True)